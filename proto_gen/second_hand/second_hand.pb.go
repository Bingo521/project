// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        (unknown)
// source: second_hand.proto

package second_hand

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type SecondHandUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenId       string `protobuf:"bytes,1,opt,name=open_id,json=openId,proto3" json:"open_id"`                   //用户uid
	ProfilePhoto string `protobuf:"bytes,2,opt,name=profile_photo,json=profilePhoto,proto3" json:"profile_photo"` //头像
	Sex          int32  `protobuf:"varint,3,opt,name=sex,proto3" json:"sex"`                                      //性别 0:未知 1:男 2:女
	UserName     string `protobuf:"bytes,4,opt,name=user_name,json=userName,proto3" json:"user_name"`             //用户名
}

func (x *SecondHandUserInfo) Reset() {
	*x = SecondHandUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_second_hand_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecondHandUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecondHandUserInfo) ProtoMessage() {}

func (x *SecondHandUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_second_hand_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecondHandUserInfo.ProtoReflect.Descriptor instead.
func (*SecondHandUserInfo) Descriptor() ([]byte, []int) {
	return file_second_hand_proto_rawDescGZIP(), []int{0}
}

func (x *SecondHandUserInfo) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *SecondHandUserInfo) GetProfilePhoto() string {
	if x != nil {
		return x.ProfilePhoto
	}
	return ""
}

func (x *SecondHandUserInfo) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *SecondHandUserInfo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type SecondHandInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageId    int64               `protobuf:"varint,1,opt,name=message_id,json=messageId,proto3" json:"message_id"`          //消息id
	Content      string              `protobuf:"bytes,2,opt,name=content,proto3" json:"content"`                                // 文本信息
	Urls         []string            `protobuf:"bytes,3,rep,name=urls,proto3" json:"urls"`                                      //图片信息
	CreateTime   int64               `protobuf:"varint,4,opt,name=create_time,json=createTime,proto3" json:"create_time"`       //创建时间
	Price        float32             `protobuf:"fixed32,5,opt,name=price,proto3" json:"price"`                                  //价格
	UserInfo     *SecondHandUserInfo `protobuf:"bytes,6,opt,name=user_info,json=userInfo,proto3" json:"user_info"`              //用户信息（匿名帖子中user_info信息为假数据，但可正常使用）
	DiggCount    int32               `protobuf:"varint,7,opt,name=digg_count,json=diggCount,proto3" json:"digg_count"`          //点赞数
	CommentCount int32               `protobuf:"varint,8,opt,name=comment_count,json=commentCount,proto3" json:"comment_count"` //评论数
	Digg         bool                `protobuf:"varint,9,opt,name=digg,proto3" json:"digg"`                                     //是否点赞
	Category     string              `protobuf:"bytes,10,opt,name=category,proto3" json:"category"`                             //分类标签
}

func (x *SecondHandInfo) Reset() {
	*x = SecondHandInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_second_hand_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecondHandInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecondHandInfo) ProtoMessage() {}

func (x *SecondHandInfo) ProtoReflect() protoreflect.Message {
	mi := &file_second_hand_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecondHandInfo.ProtoReflect.Descriptor instead.
func (*SecondHandInfo) Descriptor() ([]byte, []int) {
	return file_second_hand_proto_rawDescGZIP(), []int{1}
}

func (x *SecondHandInfo) GetMessageId() int64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *SecondHandInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SecondHandInfo) GetUrls() []string {
	if x != nil {
		return x.Urls
	}
	return nil
}

func (x *SecondHandInfo) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *SecondHandInfo) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SecondHandInfo) GetUserInfo() *SecondHandUserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

func (x *SecondHandInfo) GetDiggCount() int32 {
	if x != nil {
		return x.DiggCount
	}
	return 0
}

func (x *SecondHandInfo) GetCommentCount() int32 {
	if x != nil {
		return x.CommentCount
	}
	return 0
}

func (x *SecondHandInfo) GetDigg() bool {
	if x != nil {
		return x.Digg
	}
	return false
}

func (x *SecondHandInfo) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

//创建二手帖子
// POST /create/second_hand
type CreateSecondHandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content  string   `protobuf:"bytes,1,opt,name=content,proto3" json:"content"`   //文本内容
	Uris     []string `protobuf:"bytes,2,rep,name=uris,proto3" json:"uris"`         //图片uri列表
	Price    float32  `protobuf:"fixed32,3,opt,name=price,proto3" json:"price"`     //价格
	Category string   `protobuf:"bytes,4,opt,name=category,proto3" json:"category"` //分类标签
}

func (x *CreateSecondHandRequest) Reset() {
	*x = CreateSecondHandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_second_hand_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSecondHandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSecondHandRequest) ProtoMessage() {}

func (x *CreateSecondHandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_second_hand_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSecondHandRequest.ProtoReflect.Descriptor instead.
func (*CreateSecondHandRequest) Descriptor() ([]byte, []int) {
	return file_second_hand_proto_rawDescGZIP(), []int{2}
}

func (x *CreateSecondHandRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateSecondHandRequest) GetUris() []string {
	if x != nil {
		return x.Uris
	}
	return nil
}

func (x *CreateSecondHandRequest) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CreateSecondHandRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

type CreateSecondHandResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int32   `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code"` //状态码，0是成功，其它是错误码
	Message    string  `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`                          // 错误信息，0时为success
	Price      float32 `protobuf:"fixed32,3,opt,name=price,proto3" json:"price"`                            //多少钱
	Category   string  `protobuf:"bytes,4,opt,name=category,proto3" json:"category"`                        //分类标签
}

func (x *CreateSecondHandResponse) Reset() {
	*x = CreateSecondHandResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_second_hand_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSecondHandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSecondHandResponse) ProtoMessage() {}

func (x *CreateSecondHandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_second_hand_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSecondHandResponse.ProtoReflect.Descriptor instead.
func (*CreateSecondHandResponse) Descriptor() ([]byte, []int) {
	return file_second_hand_proto_rawDescGZIP(), []int{3}
}

func (x *CreateSecondHandResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *CreateSecondHandResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateSecondHandResponse) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CreateSecondHandResponse) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

// GET /get/user/second_hand
type GetUserSecondHandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenId string `protobuf:"bytes,1,opt,name=open_id,json=openId,proto3" json:"open_id"` //哪个用户的
	Index  int32  `protobuf:"varint,2,opt,name=index,proto3" json:"index"`                //从第几个开始
	Count  int32  `protobuf:"varint,3,opt,name=count,proto3" json:"count"`                //获取多少个
}

func (x *GetUserSecondHandRequest) Reset() {
	*x = GetUserSecondHandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_second_hand_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSecondHandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSecondHandRequest) ProtoMessage() {}

func (x *GetUserSecondHandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_second_hand_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSecondHandRequest.ProtoReflect.Descriptor instead.
func (*GetUserSecondHandRequest) Descriptor() ([]byte, []int) {
	return file_second_hand_proto_rawDescGZIP(), []int{4}
}

func (x *GetUserSecondHandRequest) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *GetUserSecondHandRequest) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *GetUserSecondHandRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetUserSecondHandResonse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode   int32             `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code"` //状态码，0是成功，其它是错误码
	Message      string            `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`                          // 错误信息，0时为success
	MessageInfos []*SecondHandInfo `protobuf:"bytes,3,rep,name=message_infos,json=messageInfos,proto3" json:"message_infos"`
	Count        int64             `protobuf:"varint,4,opt,name=count,proto3" json:"count"`                          //获取了多少个
	HasMore      bool              `protobuf:"varint,5,opt,name=has_more,json=hasMore,proto3" json:"has_more"`       //是否还有
	NextIndex    int32             `protobuf:"varint,6,opt,name=next_index,json=nextIndex,proto3" json:"next_index"` //下次加载的索引
}

func (x *GetUserSecondHandResonse) Reset() {
	*x = GetUserSecondHandResonse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_second_hand_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSecondHandResonse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSecondHandResonse) ProtoMessage() {}

func (x *GetUserSecondHandResonse) ProtoReflect() protoreflect.Message {
	mi := &file_second_hand_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSecondHandResonse.ProtoReflect.Descriptor instead.
func (*GetUserSecondHandResonse) Descriptor() ([]byte, []int) {
	return file_second_hand_proto_rawDescGZIP(), []int{5}
}

func (x *GetUserSecondHandResonse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *GetUserSecondHandResonse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetUserSecondHandResonse) GetMessageInfos() []*SecondHandInfo {
	if x != nil {
		return x.MessageInfos
	}
	return nil
}

func (x *GetUserSecondHandResonse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetUserSecondHandResonse) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *GetUserSecondHandResonse) GetNextIndex() int32 {
	if x != nil {
		return x.NextIndex
	}
	return 0
}

//获取全部二手帖子
//GET /get/second_hand/time_line
type GetMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index     int32  `protobuf:"varint,1,opt,name=index,proto3" json:"index"`                          //从哪获取
	Count     int32  `protobuf:"varint,2,opt,name=count,proto3" json:"count"`                          //获取多少个
	FirstTime int64  `protobuf:"varint,3,opt,name=first_time,json=firstTime,proto3" json:"first_time"` //第一刷时间
	Category  string `protobuf:"bytes,4,opt,name=category,proto3" json:"category"`                     //获取分类，默认为全部（category为空字符串或不传）
}

func (x *GetMessageRequest) Reset() {
	*x = GetMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_second_hand_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessageRequest) ProtoMessage() {}

func (x *GetMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_second_hand_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessageRequest.ProtoReflect.Descriptor instead.
func (*GetMessageRequest) Descriptor() ([]byte, []int) {
	return file_second_hand_proto_rawDescGZIP(), []int{6}
}

func (x *GetMessageRequest) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *GetMessageRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetMessageRequest) GetFirstTime() int64 {
	if x != nil {
		return x.FirstTime
	}
	return 0
}

func (x *GetMessageRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

type GetMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode   int32             `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code"`      //状态码，0是成功，其它是错误码
	Message      string            `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`                               // 错误信息，0时为success
	MessageInfos []*SecondHandInfo `protobuf:"bytes,3,rep,name=message_infos,json=messageInfos,proto3" json:"message_infos"` //帖子列表
	NextIndex    int32             `protobuf:"varint,4,opt,name=next_index,json=nextIndex,proto3" json:"next_index"`         //下次的索引
	HasMore      bool              `protobuf:"varint,5,opt,name=has_more,json=hasMore,proto3" json:"has_more"`               //是否还有
	FirstTime    int64             `protobuf:"varint,6,opt,name=first_time,json=firstTime,proto3" json:"first_time"`         //第一刷时间
}

func (x *GetMessageResponse) Reset() {
	*x = GetMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_second_hand_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessageResponse) ProtoMessage() {}

func (x *GetMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_second_hand_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessageResponse.ProtoReflect.Descriptor instead.
func (*GetMessageResponse) Descriptor() ([]byte, []int) {
	return file_second_hand_proto_rawDescGZIP(), []int{7}
}

func (x *GetMessageResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *GetMessageResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetMessageResponse) GetMessageInfos() []*SecondHandInfo {
	if x != nil {
		return x.MessageInfos
	}
	return nil
}

func (x *GetMessageResponse) GetNextIndex() int32 {
	if x != nil {
		return x.NextIndex
	}
	return 0
}

func (x *GetMessageResponse) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *GetMessageResponse) GetFirstTime() int64 {
	if x != nil {
		return x.FirstTime
	}
	return 0
}

//获取热门二手帖子
//GET /get/second_hand/hot
type GetHotMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index     int32  `protobuf:"varint,1,opt,name=index,proto3" json:"index"`                          //从哪获取
	Count     int32  `protobuf:"varint,2,opt,name=count,proto3" json:"count"`                          //获取多少个
	FirstTime int64  `protobuf:"varint,3,opt,name=first_time,json=firstTime,proto3" json:"first_time"` //第一刷时间
	Category  string `protobuf:"bytes,4,opt,name=category,proto3" json:"category"`                     //获取分类，默认为全部（category为空字符串或不传）
}

func (x *GetHotMessageRequest) Reset() {
	*x = GetHotMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_second_hand_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHotMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHotMessageRequest) ProtoMessage() {}

func (x *GetHotMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_second_hand_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHotMessageRequest.ProtoReflect.Descriptor instead.
func (*GetHotMessageRequest) Descriptor() ([]byte, []int) {
	return file_second_hand_proto_rawDescGZIP(), []int{8}
}

func (x *GetHotMessageRequest) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *GetHotMessageRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetHotMessageRequest) GetFirstTime() int64 {
	if x != nil {
		return x.FirstTime
	}
	return 0
}

func (x *GetHotMessageRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

type GetHotMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode   int32             `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code"`      //状态码，0是成功，其它是错误码
	Message      string            `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`                               // 错误信息，0时为success
	MessageInfos []*SecondHandInfo `protobuf:"bytes,3,rep,name=message_infos,json=messageInfos,proto3" json:"message_infos"` //帖子列表
	NextIndex    int32             `protobuf:"varint,4,opt,name=next_index,json=nextIndex,proto3" json:"next_index"`         //下次的索引
	HasMore      bool              `protobuf:"varint,5,opt,name=has_more,json=hasMore,proto3" json:"has_more"`               //是否还有
}

func (x *GetHotMessageResponse) Reset() {
	*x = GetHotMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_second_hand_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHotMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHotMessageResponse) ProtoMessage() {}

func (x *GetHotMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_second_hand_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHotMessageResponse.ProtoReflect.Descriptor instead.
func (*GetHotMessageResponse) Descriptor() ([]byte, []int) {
	return file_second_hand_proto_rawDescGZIP(), []int{9}
}

func (x *GetHotMessageResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *GetHotMessageResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetHotMessageResponse) GetMessageInfos() []*SecondHandInfo {
	if x != nil {
		return x.MessageInfos
	}
	return nil
}

func (x *GetHotMessageResponse) GetNextIndex() int32 {
	if x != nil {
		return x.NextIndex
	}
	return 0
}

func (x *GetHotMessageResponse) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

var File_second_hand_proto protoreflect.FileDescriptor

var file_second_hand_proto_rawDesc = []byte{
	0x0a, 0x11, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x81, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x48, 0x61,
	0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x70,
	0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65,
	0x6e, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70,
	0x68, 0x6f, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xba, 0x02, 0x0a, 0x0e, 0x53, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x30,
	0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x69, 0x67, 0x67, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x69, 0x67, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x69, 0x67, 0x67, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x64, 0x69, 0x67, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x22, 0x79, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x72, 0x69,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x75, 0x72, 0x69, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22,
	0x87, 0x01, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x48, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0x5f, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xdb, 0x01, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64,
	0x52, 0x65, 0x73, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x34, 0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x53, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x78,
	0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6e,
	0x65, 0x78, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x7a, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x22, 0xde, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x6e, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x19, 0x0a, 0x08, 0x68,
	0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68,
	0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x7d, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x22, 0xc2, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x0d, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x19,
	0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_second_hand_proto_rawDescOnce sync.Once
	file_second_hand_proto_rawDescData = file_second_hand_proto_rawDesc
)

func file_second_hand_proto_rawDescGZIP() []byte {
	file_second_hand_proto_rawDescOnce.Do(func() {
		file_second_hand_proto_rawDescData = protoimpl.X.CompressGZIP(file_second_hand_proto_rawDescData)
	})
	return file_second_hand_proto_rawDescData
}

var file_second_hand_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_second_hand_proto_goTypes = []interface{}{
	(*SecondHandUserInfo)(nil),       // 0: SecondHandUserInfo
	(*SecondHandInfo)(nil),           // 1: SecondHandInfo
	(*CreateSecondHandRequest)(nil),  // 2: CreateSecondHandRequest
	(*CreateSecondHandResponse)(nil), // 3: CreateSecondHandResponse
	(*GetUserSecondHandRequest)(nil), // 4: GetUserSecondHandRequest
	(*GetUserSecondHandResonse)(nil), // 5: GetUserSecondHandResonse
	(*GetMessageRequest)(nil),        // 6: GetMessageRequest
	(*GetMessageResponse)(nil),       // 7: GetMessageResponse
	(*GetHotMessageRequest)(nil),     // 8: GetHotMessageRequest
	(*GetHotMessageResponse)(nil),    // 9: GetHotMessageResponse
}
var file_second_hand_proto_depIdxs = []int32{
	0, // 0: SecondHandInfo.user_info:type_name -> SecondHandUserInfo
	1, // 1: GetUserSecondHandResonse.message_infos:type_name -> SecondHandInfo
	1, // 2: GetMessageResponse.message_infos:type_name -> SecondHandInfo
	1, // 3: GetHotMessageResponse.message_infos:type_name -> SecondHandInfo
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_second_hand_proto_init() }
func file_second_hand_proto_init() {
	if File_second_hand_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_second_hand_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecondHandUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_second_hand_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecondHandInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_second_hand_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSecondHandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_second_hand_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSecondHandResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_second_hand_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserSecondHandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_second_hand_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserSecondHandResonse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_second_hand_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_second_hand_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_second_hand_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHotMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_second_hand_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHotMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_second_hand_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_second_hand_proto_goTypes,
		DependencyIndexes: file_second_hand_proto_depIdxs,
		MessageInfos:      file_second_hand_proto_msgTypes,
	}.Build()
	File_second_hand_proto = out.File
	file_second_hand_proto_rawDesc = nil
	file_second_hand_proto_goTypes = nil
	file_second_hand_proto_depIdxs = nil
}
